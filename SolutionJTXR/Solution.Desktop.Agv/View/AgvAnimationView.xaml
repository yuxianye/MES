<core:UserControlBase x:Class="Solution.Desktop.Agv.View.AgvAnimationView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:Metro="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:core="clr-namespace:Solution.Desktop.Core;assembly=Solution.Desktop.Core"
                      xmlns:dp="clr-namespace:Solution.Desktop.View.UserControls;assembly=Solution.Desktop.View"
                      xmlns:res="clr-namespace:Solution.Desktop.Resource;assembly=Solution.Desktop.Resource"
                      mc:Ignorable="d"
                      Margin="0,-10,0,-7">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="{StaticResource ViewButtonAreaHeight}" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <StackPanel VerticalAlignment="Center"
                    Orientation="Horizontal">
            <res:ImageButton Content="{DynamicResource Connect}"
                             ToolTip="{DynamicResource Connect}"
                             Width="{DynamicResource ViewButtonWidth}"
                             Command="{Binding ConnectCommand}"
                             IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Add_32x32.png" />
            <res:ImageButton Content="{DynamicResource Disconnect}"
                             ToolTip="{DynamicResource Disconnect}"
                             Width="{DynamicResource ViewButtonWidth}"
                             Command="{Binding StopCommand}"
                             Margin="{DynamicResource ControlMargin6}"
                             IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Add_32x32.png" />
            <res:ImageButton Content="{DynamicResource RefreshMap}"
                             ToolTip="{DynamicResource RefreshMap}"
                             Width="{DynamicResource ViewButtonWidth2}"
                             Command="{Binding RefreshMapCommand}"
                             Margin="{DynamicResource ControlMargin6}"
                             IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Add_32x32.png" />
            <res:ImageButton Content="{DynamicResource RefreshCar}"
                             ToolTip="{DynamicResource RefreshCar}"
                             Width="{DynamicResource ViewButtonWidth2}"
                             Command="{Binding RefreshCarCommand}"
                             Margin="{DynamicResource ControlMargin6}"
                             IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Add_32x32.png" />
            <res:ImageButton Content="{DynamicResource RefreshTask}"
                             ToolTip="{DynamicResource RefreshTask}"
                             Width="{DynamicResource ViewButtonWidth2}"
                             Command="{Binding RefreshTaskCommand}"
                             Margin="{DynamicResource ControlMargin6}"
                             IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Add_32x32.png" />
            <res:ImageButton Content="{DynamicResource RefreshAll}"
                             ToolTip="{DynamicResource RefreshAll}"
                             Width="{DynamicResource ViewButtonWidth2}"
                             Command="{Binding RefreshAllCommand}"
                             Margin="{DynamicResource ControlMargin6}"
                             IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Add_32x32.png" />
            <!--<Button Content="{DynamicResource StartConnect}"
                    ToolTip="{DynamicResource StartConnect}"
                    Width="{DynamicResource ViewButtonWidth}"
                    Command="{Binding ConnectCommand}" />-->
            <!--<Button Content="{DynamicResource Delete}"
                    ToolTip="{DynamicResource Delete}"
                    Width="{DynamicResource ViewButtonWidth}"
                    Command="{Binding StopCommand}"
                    Margin="{DynamicResource ControlMargin6}" />-->
            <!--  <Button Content="{DynamicResource LogicalDelete}"
                    ToolTip="{DynamicResource LogicalDelete}"
                    Width="{DynamicResource ViewButtonWidth}"
                    Command="{Binding RecycleCommand}"
                    Margin="{DynamicResource ControlMargin6}" />
            <Button Content="{DynamicResource PhysicalDelete}"
                    ToolTip="{DynamicResource PhysicalDelete}"
                    Width="{DynamicResource ViewButtonWidth}"
                    Command="{Binding PhysicalDeleteCommand }"
                    Margin="{DynamicResource ControlMargin6}" />
            <Button Content="{DynamicResource Refresh}"
                    ToolTip="{DynamicResource Refresh}"
                    Width="{DynamicResource ViewButtonWidth}"
                    Command="{Binding RefreshCommand}"
                    Margin="{DynamicResource ControlMargin6}" />
            <Button Content="{DynamicResource Import}"
Visibility="Collapsed"
                    ToolTip="{DynamicResource Import}"
                    Width="{DynamicResource ViewButtonWidth}"
                    Command="{Binding ImportCommand}"
                    Margin="{DynamicResource ControlMargin6}" />
            <Button Content="{DynamicResource Export}"
Visibility="Collapsed"
                    ToolTip="{DynamicResource Export}"
                    Width="{DynamicResource ViewButtonWidth}"
                    Command="{Binding ExportCommand}"
                    Margin="{DynamicResource ControlMargin6}" />
            <Button Content="{DynamicResource Print}"
Visibility="Collapsed"
                    ToolTip="{DynamicResource Print}"
                    Width="{DynamicResource ViewButtonWidth}"
                    Command="{Binding PrintCommand}"
                    Margin="{DynamicResource ControlMargin6}" />-->
            <!--<TextBox x:Name="txtSearch"
                     Grid.Column="1"
                     Style="{DynamicResource SearchMetroTextBox}"
                     Margin="{DynamicResource ControlMargin6}"
                     Metro:TextBoxHelper.ButtonCommand="{Binding SearchCommand, Mode=OneWay}"
                     Metro:TextBoxHelper.ButtonCommandParameter="{Binding ElementName=txtSearch, Path=Text}"
                     Metro:TextBoxHelper.SelectAllOnFocus="True"
                     Metro:TextBoxHelper.Watermark="{DynamicResource SocketSearchTextBoxWatermark}"
                     Width="{DynamicResource SearchTextBoxWidth}">
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter"
                                Command="{Binding SearchCommand, Mode=OneWay}"
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=TextBox}, Path=Text, Mode=OneWay}" />
                </TextBox.InputBindings>
            </TextBox>-->
        </StackPanel>
        <Grid Grid.Row="1"
              Background="{DynamicResource WorkshopBackBrush1}"
              ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="78*"></ColumnDefinition>
                <ColumnDefinition Width="2"></ColumnDefinition>
                <ColumnDefinition Width="22*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="20*"></RowDefinition>
                <RowDefinition Height="40*"></RowDefinition>
                <RowDefinition Height="40*"></RowDefinition>
                <RowDefinition Height="40*"></RowDefinition>
            </Grid.RowDefinitions>
            <ContentControl Grid.Row="0"
                            Grid.Column="0"
                            Grid.RowSpan="3"
                            Content="{Binding MainContent}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SizeChanged">
                        <i:InvokeCommandAction Command="{Binding Path=SizeChangedCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding Path=SizeChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ContentControl>
            <!--<Separator Grid.Column="1" Grid.Row="0" Grid.RowSpan="6" Background="Red" />-->
            <DataGrid Grid.Row="0"
                      Grid.Column="2"
                      AutoGenerateColumns="False"
                      IsReadOnly="True"
                      SelectionMode="Single"
                      HeadersVisibility="All"
                      GridLinesVisibility="All"
                      RowHeaderWidth="20"
                      ItemsSource="{Binding Path=AgvInfoList}"
                      SelectedItem="{Binding AgvInfo}"
                      HorizontalContentAlignment="Center"
                      SelectionUnit="FullRow"
                      VirtualizingStackPanel.IsVirtualizing="True"
                      mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Visibility="Hidden"
                                        Header="Id"
                                        ScrollViewer.CanContentScroll="True"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding CarNo}"
                                        Header="{DynamicResource CarNo}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding CarName}"
                                        Header="{DynamicResource CarName}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <!--<DataGridTextColumn Binding="{Binding AreaId}"
                                        Header="{DynamicResource AreaId}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding ProductLineId}"
                                        Header="{DynamicResource ProductLineId}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />-->
                    <DataGridTextColumn Binding="{Binding SettingSpeed}"
                                        Header="{DynamicResource SettingSpeed}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding Priority}"
                                        Header="{DynamicResource Priority}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding AlarmPowerLevel}"
                                        Header="{DynamicResource AlarmPowerLevel}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding Status}"
                                        Header="{DynamicResource Status}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <!--<DataGridTextColumn Binding="{Binding CreatedTime, StringFormat='yyyy-MM-dd HH:mm:ss'}"
                                        Header="{DynamicResource CreatedTime}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding CreatorUserId}"
                                        Header="{DynamicResource CreatorUserId}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding LastUpdatedTime, StringFormat='yyyy-MM-dd HH:mm:ss'}"
                                        Header="{DynamicResource LastUpdatedTime}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding LastUpdatorUserId}"
                                        Header="{DynamicResource LastUpdatorUserId}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding Remark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Header="{DynamicResource Remark}"
                                        Width="*"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />-->
                </DataGrid.Columns>
                <DataGrid.Style>
                    <Style BasedOn="{StaticResource MetroDataGrid}"
                           TargetType="{x:Type DataGrid}">
                        <Setter Property="AlternatingRowBackground"
                                Value="{DynamicResource GrayBrush10}" />
                        <Setter Property="BorderBrush"
                                Value="{StaticResource AccentColorBrush}" />
                        <Setter Property="BorderThickness"
                                Value="1" />
                    </Style>
                </DataGrid.Style>
            </DataGrid>
            <DataGrid Grid.Row="1"
                      Grid.Column="2"
                      AutoGenerateColumns="False"
                      IsReadOnly="True"
                      SelectionMode="Single"
                      HeadersVisibility="All"
                      GridLinesVisibility="All"
                      RowHeaderWidth="20"
                      ItemsSource="{Binding Path=AlarmInfoList}"
                      SelectedItem="{Binding AlarmInfo}"
                      HorizontalContentAlignment="Center"
                      SelectionUnit="FullRow"
                      VirtualizingStackPanel.IsVirtualizing="True"
                      mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled="True">
                <DataGrid.Columns>
                    <!--<DataGridCheckBoxColumn Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected, Mode=OneWay}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Header="Row Selected" />-->
                    <DataGridTextColumn Binding="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Visibility="Hidden"
                                        Header="Id"
                                        ScrollViewer.CanContentScroll="True"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding AlarmCode}"
                                        Header="{DynamicResource AlarmCode}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding AgvName}"
                                        Header="{DynamicResource AgvName}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding CarPosition_Name}"
                                        Header="{DynamicResource CarPosition_Name}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding CreatedTime, StringFormat='yyyy-MM-dd HH:mm:ss'}"
                                        Header="{DynamicResource CreatedTime}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding Remark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Header="{DynamicResource Remark}"
                                        Width="*"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                </DataGrid.Columns>
                <DataGrid.Style>
                    <Style BasedOn="{StaticResource MetroDataGrid}"
                           TargetType="{x:Type DataGrid}">
                        <Setter Property="AlternatingRowBackground"
                                Value="{DynamicResource GrayBrush10}" />
                        <Setter Property="BorderBrush"
                                Value="{StaticResource AccentColorBrush}" />
                        <Setter Property="BorderThickness"
                                Value="1" />
                    </Style>
                </DataGrid.Style>
            </DataGrid>
            <DataGrid  Grid.Row="2"
                       Grid.Column="2"
                       AutoGenerateColumns="False"
                       IsReadOnly="True"
                       SelectionMode="Single"
                       HeadersVisibility="All"
                       GridLinesVisibility="All"
                       RowHeaderWidth="20"
                       ItemsSource="{Binding Path=AlarmInfoList}"
                       SelectedItem="{Binding AlarmInfo}"
                       HorizontalContentAlignment="Center"
                       SelectionUnit="FullRow"
                       VirtualizingStackPanel.IsVirtualizing="True"
                       mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Visibility="Hidden"
                                        Header="Id"
                                        ScrollViewer.CanContentScroll="True"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding AlarmCode}"
                                        Header="{DynamicResource AlarmCode}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding AgvName}"
                                        Header="{DynamicResource AgvName}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding CarPosition_Name}"
                                        Header="{DynamicResource CarPosition_Name}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding CreatedTime, StringFormat='yyyy-MM-dd HH:mm:ss'}"
                                        Header="{DynamicResource CreatedTime}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding Remark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Header="{DynamicResource Remark}"
                                        Width="*"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                </DataGrid.Columns>
                <DataGrid.Style>
                    <Style BasedOn="{StaticResource MetroDataGrid}"
                           TargetType="{x:Type DataGrid}">
                        <Setter Property="AlternatingRowBackground"
                                Value="{DynamicResource GrayBrush10}" />
                        <Setter Property="BorderBrush"
                                Value="{StaticResource AccentColorBrush}" />
                        <Setter Property="BorderThickness"
                                Value="1" />
                    </Style>
                </DataGrid.Style>
            </DataGrid>
            <DataGrid  Grid.Row="3"
                       Grid.Column="2"
                       AutoGenerateColumns="False"
                       IsReadOnly="True"
                       SelectionMode="Single"
                       HeadersVisibility="All"
                       GridLinesVisibility="All"
                       RowHeaderWidth="20"
                       ItemsSource="{Binding Path=ClientDataEntities}"
                       SelectedItem="{Binding AlarmInfo}"
                       HorizontalContentAlignment="Center"
                       SelectionUnit="FullRow"
                       VirtualizingStackPanel.IsVirtualizing="True"
                       mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Visibility="Hidden"
                                        Header="Id"
                                        ScrollViewer.CanContentScroll="True"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding NodeId}"
                                        Header="{DynamicResource DeviceNodeName}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding Value}"
                                        Header="{DynamicResource OpcUaHistoryValue}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding OldVaule}"
                                        Header="{DynamicResource OpcUaHistoryOldValue}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding StatusCode}"
                                        Header="{DynamicResource ValueQuality}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding ValueType}"
                                        Header="{DynamicResource ValueType}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <!--<DataGridTextColumn Binding="{Binding Remark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Header="{DynamicResource Remark}"
                                        Width="*"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />-->
                </DataGrid.Columns>
                <DataGrid.Style>
                    <Style BasedOn="{StaticResource MetroDataGrid}"
                           TargetType="{x:Type DataGrid}">
                        <Setter Property="AlternatingRowBackground"
                                Value="{DynamicResource GrayBrush10}" />
                        <Setter Property="BorderBrush"
                                Value="{StaticResource AccentColorBrush}" />
                        <Setter Property="BorderThickness"
                                Value="1" />
                    </Style>
                </DataGrid.Style>
            </DataGrid>
        </Grid>
        <!--<Canvas>-->
        <!--<Canvas Width="20"
                    Height="20"
                    Canvas.Left=" 20"
                    Canvas.Top=" 20"></Canvas>-->
        <!--</Canvas>-->
        <!--<DataGrid AutoGenerateColumns="False"
                  IsReadOnly="True"
                  SelectionMode="Single"
                  HeadersVisibility="All"
                  GridLinesVisibility="All"
                  RowHeaderWidth="20"
                  ItemsSource="{Binding Path=CommOpcUaBusinessInfoList}"
                  SelectedItem="{Binding CommOpcUaBusinessInfo}"
                  HorizontalContentAlignment="Center"
                  SelectionUnit="FullRow"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled="True"
                  Grid.Row="1">
            <DataGrid.Columns>
                -->
        <!--<DataGridCheckBoxColumn Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected, Mode=OneWay}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Header="Row Selected" />-->
        <!--
                <DataGridTextColumn Binding="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Visibility="Hidden"
                                    Header="Id"
                                    ScrollViewer.CanContentScroll="True"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding BusinessId}"
                                    Header="{DynamicResource OpcUaBusinessId}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding BusinessName}"
                                    Header="{DynamicResource OpcUaBusinessName}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding NodeName}"
                                    Header="{DynamicResource OpcUaBusinessNodeName}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding Value}"
                                    Header="{DynamicResource OpcUaBusinessValue}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding Description}"
                                    Header="{DynamicResource OpcUaBusinessDescription}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridCheckBoxColumn Selector.IsSelected="{Binding IsLocked}"
                                        Header="{DynamicResource IsLocked}"></DataGridCheckBoxColumn>
                <DataGridTextColumn Binding="{Binding CreatedTime, StringFormat='yyyy-MM-dd HH:mm:ss'}"
                                    Header="{DynamicResource CreatedTime}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding EnterpriseRemark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Header="{DynamicResource Remark}"
                                    Width="*"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />

            </DataGrid.Columns>
            <DataGrid.Style>
                <Style BasedOn="{StaticResource MetroDataGrid}"
                       TargetType="{x:Type DataGrid}">
                    <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource GrayBrush10}" />
                    <Setter Property="BorderBrush"
                            Value="{StaticResource AccentColorBrush}" />
                    <Setter Property="BorderThickness"
                            Value="1" />
                </Style>
            </DataGrid.Style>
        </DataGrid>
        <StackPanel  Grid.Row="2"
                     Orientation="Horizontal">
            <dp:DataPager x:Name="dataPager"
                          TotalCount="{Binding TotalCounts}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PageChanged">
                        <i:InvokeCommandAction Command="{Binding Path=PageChangedCommand}"
                                               CommandParameter="{Binding Path=PageChangedEventArgs, ElementName=dataPager}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </dp:DataPager>
        </StackPanel>-->
    </Grid>
</core:UserControlBase>