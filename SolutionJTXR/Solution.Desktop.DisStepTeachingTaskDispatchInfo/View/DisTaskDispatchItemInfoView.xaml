<core:UserControlBase x:Class="Solution.Desktop.DisTaskDispatchInfo.View.DisTaskDispatchItemInfoView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:Metro="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:core="clr-namespace:Solution.Desktop.Core;assembly=Solution.Desktop.Core"
                      xmlns:dp="clr-namespace:Solution.Desktop.View.UserControls;assembly=Solution.Desktop.View"
                      xmlns:ch="clr-namespace:Solution.Desktop.View.ControlHelper;assembly=Solution.Desktop.View"
                      xmlns:res="clr-namespace:Solution.Desktop.Resource;assembly=Solution.Desktop.Resource"
                      mc:Ignorable="d"
                      Margin="0,-10,0,-7">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="{StaticResource ViewButtonAreaHeight}" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <StackPanel VerticalAlignment="Center"
                    Orientation="Horizontal">
            <res:ImageButton Content="{DynamicResource Refresh}"
                             ToolTip="{DynamicResource Refresh}"
                             Width="{DynamicResource ViewButtonWidth}"
                             Command="{Binding RefreshCommand}"
                             Margin="{DynamicResource ControlMargin6}"
                             IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Refresh_32x32.png" />
            <res:ImageButton Content="{DynamicResource Import}"
                             Visibility="Collapsed"
                             ToolTip="{DynamicResource Import}"
                             Width="{DynamicResource ViewButtonWidth}"
                             Command="{Binding ImportCommand}"
                             Margin="{DynamicResource ControlMargin6}"
                             IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Import_32x32.png" />
            <res:ImageButton Content="{DynamicResource Export}"
                             Visibility="Collapsed"
                             ToolTip="{DynamicResource Export}"
                             Width="{DynamicResource ViewButtonWidth}"
                             Command="{Binding ExportCommand}"
                             Margin="{DynamicResource ControlMargin6}"
                             IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Export_32x32.png" />
            <res:ImageButton Content="{DynamicResource Print}"
                             Visibility="Collapsed"
                             ToolTip="{DynamicResource Print}"
                             Width="{DynamicResource ViewButtonWidth}"
                             Command="{Binding PrintCommand}"
                             Margin="{DynamicResource ControlMargin6}"
                             IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Print_32x32.png" />
            <res:ImageButton Content="{DynamicResource Cancel}"
                             ToolTip="{DynamicResource Cancel}"
                             Width="{DynamicResource ViewButtonWidth*2}"
                             Command="{Binding CancelCommand}"
                             Margin="{DynamicResource ControlMargin6}"
                             IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Edit_32x32.png" />
            <TextBox x:Name="txtSearch"
                     Grid.Column="1"
                     Style="{DynamicResource SearchMetroTextBox}"
                     Margin="{DynamicResource ControlMargin6}"
                     Metro:TextBoxHelper.ButtonCommand="{Binding SearchCommand, Mode=OneWay}"
                     Metro:TextBoxHelper.ButtonCommandParameter="{Binding ElementName=txtSearch, Path=Text}"
                     Metro:TextBoxHelper.SelectAllOnFocus="True"
                     Metro:TextBoxHelper.Watermark="{DynamicResource SearchPlanOrderTextBoxWatermark}"
                     Width="{DynamicResource SearchTextBoxWidth}">
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter"
                                Command="{Binding SearchCommand, Mode=OneWay}"
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=TextBox}, Path=Text, Mode=OneWay}" />
                </TextBox.InputBindings>
            </TextBox>
        </StackPanel>
        <DataGrid AutoGenerateColumns="False"
                  IsReadOnly="True"
                  SelectionMode="Single"
                  HeadersVisibility="All"
                  GridLinesVisibility="All"
                  RowHeaderWidth="20"
                  ItemsSource="{Binding Path=DisTaskDispatchItemInfoList}"
                  SelectedItem="{Binding DisTaskDispatchItemInfo}"
                  HorizontalContentAlignment="Center"
                  SelectionUnit="FullRow"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled="True"
                  Grid.Row="1">
            <DataGrid.ContextMenu>
                <ContextMenu ItemsSource="{Binding MenuItems}"></ContextMenu>
            </DataGrid.ContextMenu>
            <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding Path=EditCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>-->
            <!--《增加右键快捷菜单和双击打开编辑页面命令》-->
            <DataGrid.Resources>
                <ch:BindingProxy x:Key="proxy"
                                 Data="{Binding}" />
            </DataGrid.Resources>
            <DataGrid.InputBindings>
                <KeyBinding Key="F5"
                            Command="{Binding Path=RefreshCommand}"></KeyBinding>
            </DataGrid.InputBindings>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Visibility="Hidden"
                                    Header="Id"
                                    ScrollViewer.CanContentScroll="True"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding TaskTypeName}"
                                    Header="{DynamicResource DisTaskDispatchItemInfoViewTaskType}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding TaskItemCode}"
                                    Header="{DynamicResource DisTaskDispatchItemInfoViewTaskItemCode}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding EquipmentCode}"
                                    Header="{DynamicResource DisTaskDispatchItemInfoViewEquipmentCode}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding EquipmentName}"
                                    Header="{DynamicResource DisTaskDispatchItemInfoViewEquipmentName}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding EquipmentActionName}"
                                    Header="{DynamicResource DisTaskDispatchItemInfoViewEquipmentAction}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding TaskItemResult}"
                                    Header="{DynamicResource DisTaskDispatchItemInfoViewTaskResult}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding Description}"
                                    Header="{DynamicResource OrderDescription}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding CreatedTime, StringFormat='yyyy-MM-dd HH:mm:ss'}"
                                    Header="{DynamicResource CreatedTime}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding FinishTime, StringFormat='yyyy-MM-dd HH:mm:ss'}"
                                    Header="{DynamicResource DisTaskDispatchItemInfoViewFinishTime}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding CreatorUserId}"
                                    Header="{DynamicResource CreatorUserId}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding LastUpdatedTime, StringFormat='yyyy-MM-dd HH:mm:ss'}"
                                    Header="{DynamicResource LastUpdatedTime}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding LastUpdatorUserId}"
                                    Header="{DynamicResource LastUpdatorUserId}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                <DataGridTextColumn Binding="{Binding Remark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Header="{DynamicResource Remark}"
                                    Width="*"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />

            </DataGrid.Columns>
            <DataGrid.Style>
                <Style BasedOn="{StaticResource MetroDataGrid}"
                       TargetType="{x:Type DataGrid}">
                    <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource GrayBrush10}" />
                    <Setter Property="BorderBrush"
                            Value="{StaticResource AccentColorBrush}" />
                    <Setter Property="BorderThickness"
                            Value="1" />
                </Style>
            </DataGrid.Style>
        </DataGrid>
        <StackPanel  Grid.Row="2"
                     Height="50"
                     Orientation="Horizontal">
            <dp:DataPager x:Name="dataPager"
                          TotalCount="{Binding TotalCounts}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PageChanged">
                        <i:InvokeCommandAction Command="{Binding Path=PageChangedCommand}"
                                               CommandParameter="{Binding Path=PageChangedEventArgs, ElementName=dataPager}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </dp:DataPager>
        </StackPanel>
    </Grid>
</core:UserControlBase>
