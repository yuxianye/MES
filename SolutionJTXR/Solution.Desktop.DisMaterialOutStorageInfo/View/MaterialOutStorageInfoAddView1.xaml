<core:UserControlBase x:Class="Solution.Desktop.MaterialOutStorageInfo.View.MaterialOutStorageInfoAddView1"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:core="clr-namespace:Solution.Desktop.Core;assembly=Solution.Desktop.Core"
                      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                      xmlns:res="clr-namespace:Solution.Desktop.Resource;assembly=Solution.Desktop.Resource"
                      mc:Ignorable="d"
                      d:DesignHeight="450"
                      d:DesignWidth="600"
                      Width="{DynamicResource  PopupWinodwsWidth}"
                      Height="{DynamicResource PopupWinodwsHeight}">

    <Grid>
        <Grid.RowDefinitions>
            <!--行数根据业务字段多少需要添加或者减少-->
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="40" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <!--列数固定，字段较多时，可每行放两个字段-->
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="5" />
        </Grid.ColumnDefinitions>

        <TextBox Name="OutStorageBillCode"
                 Grid.Row="0"
                 Grid.Column="1"
                 Grid.ColumnSpan="3"
                 MaxLength="50"
                 TextWrapping="Wrap"
                 VerticalAlignment="Center"
                 IsEnabled="False"
                 FontSize="{DynamicResource ContentFontSize}"
                 Metro:TextBoxHelper.SelectAllOnFocus="True"
                 Metro:TextBoxHelper.UseFloatingWatermark="True"
                 Metro:TextBoxHelper.Watermark="{DynamicResource MaterialOutStorageOutStorageBillCode}"
                 Metro:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(Metro:TextBoxHelper.HasText), Mode=OneWay}"
                 Text="{Binding MaterialOutStorageInfo.OutStorageBillCode, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" />

        <ComboBox Name="OutStorageType"
                  Grid.Row="1"
                  Grid.Column="1"
                  Grid.ColumnSpan="3"
                  SelectionChanged="OutStorageType_SelectionChanged"
                  ItemsSource="{Binding OutStorageTypes}"
                  SelectedValue="{Binding MaterialOutStorageInfo.OutStorageType, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                  VerticalAlignment="Center"
                  IsEnabled="False"
                  Metro:TextBoxHelper.UseFloatingWatermark="True"
                  Metro:TextBoxHelper.Watermark="{DynamicResource MaterialOutStorageOutStorageType}" />

        <!--<TextBox Grid.Row="2"
                 Grid.Column="1"
                 Grid.ColumnSpan="3"
                 MaxLength="200"
                 TextWrapping="Wrap"
                 VerticalAlignment="Center"
                 FontSize="{DynamicResource ContentFontSize}"
                 Metro:TextBoxHelper.SelectAllOnFocus="True"
                 Metro:TextBoxHelper.UseFloatingWatermark="True"
                 Metro:TextBoxHelper.Watermark="{DynamicResource MaterialOutStoragePlanScheduleID}"
                 Metro:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(Metro:TextBoxHelper.HasText), Mode=OneWay}"
                 Text="{Binding MaterialOutStorageInfo.PlanScheduleID, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" />-->

        <!--<ComboBox Name="MaterialID"
                  Grid.Row="2" 
                  Grid.Column="1"                  
                  Grid.ColumnSpan="3"
                  DisplayMemberPath="MaterialName"
                  SelectedValuePath="Id"
                  ItemsSource="{Binding MaterialInfoList}"
                  SelectedValue="{Binding MaterialOutStorageInfo.MaterialID, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                  VerticalAlignment="Center"
                  Metro:TextBoxHelper.UseFloatingWatermark="True"
                  Metro:TextBoxHelper.Watermark="{DynamicResource MaterialOutStorageMaterial}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding MaterialSelectionChangedCommand}"  />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
        </ComboBox>-->


        <!--<TextBox Name="Quantity"
                 Grid.Row="3"
                 Grid.Column="1"
                 Grid.ColumnSpan="3"
                 MaxLength="200"
                 TextWrapping="Wrap"
                 VerticalAlignment="Center"
                 FontSize="{DynamicResource ContentFontSize}"
                 Metro:TextBoxHelper.SelectAllOnFocus="True"
                 Metro:TextBoxHelper.UseFloatingWatermark="True"
                 Metro:TextBoxHelper.Watermark="{DynamicResource MaterialOutStorageQuantity}"
                 Metro:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(Metro:TextBoxHelper.HasText), Mode=OneWay}"
                 Text="{Binding MaterialOutStorageInfo.Quantity, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding OutquantityTextChangedCommand}"  />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
        </TextBox>-->

        <!--<TextBox Name="PalletQuantity"
                 Grid.Row="4"
                 Grid.Column="1"
                 Grid.ColumnSpan="3"
                 MaxLength="200"
                 TextWrapping="Wrap"
                 VerticalAlignment="Center"
                 IsEnabled="False"
                 FontSize="{DynamicResource ContentFontSize}"
                 Metro:TextBoxHelper.SelectAllOnFocus="True"
                 Metro:TextBoxHelper.UseFloatingWatermark="True"
                 Metro:TextBoxHelper.Watermark="{DynamicResource MaterialOutStoragePalletQuantity}"
                 Metro:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(Metro:TextBoxHelper.HasText), Mode=OneWay}"
                 Text="{Binding MaterialOutStorageInfo.PalletQuantity, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" />-->
                        
        <ComboBox Name="WareHouseLocationID"
                  Grid.Row="2" 
                  Grid.Column="1"                  
                  Grid.ColumnSpan="3"
                  DisplayMemberPath="WareHouseLocationName"
                  SelectedValuePath="Id"
                  ItemsSource="{Binding MatWareHouseLocationInfoList}"
                  SelectedValue="{Binding MaterialOutStorageInfo.WareHouseLocationID, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                  VerticalAlignment="Center"
                  Metro:TextBoxHelper.UseFloatingWatermark="True"
                  Metro:TextBoxHelper.Watermark="{DynamicResource MaterialOutStorageWareHouseLocationID}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding WareHouseLocationSelectionChangedCommand}"  />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
        </ComboBox>
    

        <ComboBox Name="PalletID"
                  Grid.Row="3" 
                  Grid.Column="1"                  
                  Grid.ColumnSpan="3"
                  DisplayMemberPath="PalletName"
                  SelectedValuePath="Id"
                  ItemsSource="{Binding MatPalletInfoList}"
                  SelectedValue="{Binding MaterialOutStorageInfo.PalletID, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                  VerticalAlignment="Center"
                  IsEnabled="False"
                  Metro:TextBoxHelper.UseFloatingWatermark="True"
                  Metro:TextBoxHelper.Watermark="{DynamicResource MaterialOutStoragePalletID}"/>

        <!--<Metro:DateTimePicker Name="OutStorageTime"
                              Grid.Row="6"
                              Grid.Column="1"
                              Grid.ColumnSpan="3"
                              VerticalAlignment="Center"
                              Culture="{Binding CurrentCulture}"
                              Metro:TextBoxHelper.Watermark="{DynamicResource MaterialOutStorageOutStorageTime}"
                              HandVisibility="All"
                              IsClockVisible="True"
                              Orientation="Horizontal"
                              PickerVisibility="All"
                              SelectedDateFormat="Long"
                              SelectedTimeFormat="Long"
                              SelectedDate="{Binding MaterialOutStorageInfo.OutStorageTime, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
        </Metro:DateTimePicker>-->

        <!--<Metro:DateTimePicker Grid.Row="8"
                              Grid.Column="1"
                              Grid.ColumnSpan="3"
                              VerticalAlignment="Center"
                              IsEnabled="False"
                              Culture="{Binding CurrentCulture}"
                              Metro:TextBoxHelper.Watermark="{DynamicResource MaterialOutStorageFinishTime}"
                              HandVisibility="All"
                              IsClockVisible="True"
                              Orientation="Horizontal"
                              PickerVisibility="All"
                              SelectedDateFormat="Long"
                              SelectedTimeFormat="Long"
                              SelectedDate="{Binding MaterialOutStorageInfo.FinishTime, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
        </Metro:DateTimePicker>-->

        <!--<ComboBox Name="OutStorageStatus"
                  Grid.Row="7"
                  Grid.Column="1"
                  Grid.ColumnSpan="3"
                  IsEnabled="False"
                  ItemsSource="{Binding OutStorageStatus}"
                  SelectedValue="{Binding MaterialOutStorageInfo.OutStorageStatus, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                  VerticalAlignment="Center"
                  Metro:TextBoxHelper.UseFloatingWatermark="True"
                  Metro:TextBoxHelper.Watermark="{DynamicResource MaterialOutStorageOutStorageStatus}" />-->

        <!--<TextBox Grid.Row="10"
                 Grid.Column="1"
                 Grid.ColumnSpan="3"
                 MaxLength="200"
                 TextWrapping="Wrap"
                 VerticalAlignment="Center"
                 FontSize="{DynamicResource ContentFontSize}"
                 Metro:TextBoxHelper.SelectAllOnFocus="True"
                 Metro:TextBoxHelper.UseFloatingWatermark="True"
                 Metro:TextBoxHelper.Watermark="{DynamicResource MaterialOutStorageCreateUser}"
                 Metro:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(Metro:TextBoxHelper.HasText), Mode=OneWay}"
                 Text="{Binding MaterialOutStorageInfo.CreateUser, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" />

        <TextBox Grid.Row="11"
                 Grid.Column="1"
                 Grid.ColumnSpan="3"
                 MaxLength="200"
                 TextWrapping="Wrap"
                 VerticalAlignment="Center"
                 IsEnabled="False"
                 FontSize="{DynamicResource ContentFontSize}"
                 Metro:TextBoxHelper.SelectAllOnFocus="True"
                 Metro:TextBoxHelper.UseFloatingWatermark="True"
                 Metro:TextBoxHelper.Watermark="{DynamicResource MaterialOutStorageAuditPerson}"
                 Metro:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(Metro:TextBoxHelper.HasText), Mode=OneWay}"
                 Text="{Binding MaterialOutStorageInfo.AuditPerson, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" />

        <ComboBox Grid.Row="12"
                  Grid.Column="1"
                  Grid.ColumnSpan="3"
                  IsEnabled="False"
                  ItemsSource="{Binding AuditStatus}"
                  SelectedValue="{Binding MaterialOutStorageInfo.AuditStatus, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                  VerticalAlignment="Center"
                  Metro:TextBoxHelper.UseFloatingWatermark="True"
                  Metro:TextBoxHelper.Watermark="{DynamicResource MaterialOutStorageAuditStatus}" />-->

        <TextBox Name="Description"
                 Grid.Row="4"
                 Grid.Column="1"
                 Grid.ColumnSpan="3"
                 MaxLength="100"
                 TextWrapping="Wrap"
                 VerticalAlignment="Center"
                 FontSize="{DynamicResource ContentFontSize}"
                 Metro:TextBoxHelper.SelectAllOnFocus="True"
                 Metro:TextBoxHelper.UseFloatingWatermark="True"
                 Metro:TextBoxHelper.Watermark="{DynamicResource MaterialOutStorageDescription}"
                 Metro:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(Metro:TextBoxHelper.HasText), Mode=OneWay}"
                 Text="{Binding MaterialOutStorageInfo.Description, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" />

        <TextBox Name="Remark"
                 Grid.Row="5"
                 Grid.Column="1"
                 Grid.ColumnSpan="3"
                 MaxLength="200"
                 TextWrapping="Wrap"
                 VerticalAlignment="Center"
                 FontSize="{DynamicResource ContentFontSize}"
                 Metro:TextBoxHelper.SelectAllOnFocus="True"
                 Metro:TextBoxHelper.UseFloatingWatermark="True"
                 Metro:TextBoxHelper.Watermark="{DynamicResource MaterialOutStorageRemark}"
                 Metro:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(Metro:TextBoxHelper.HasText), Mode=OneWay}"
                 Text="{Binding MaterialOutStorageInfo.Remark, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" />

        <Grid  Grid.Row="11"
               Grid.Column="1"
               Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Button   Grid.Row="0"
                      Grid.Column="0"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center"
                      Command="{Binding ConfirmCommand}"
                      Content="{DynamicResource Confirm}"
                      Width="{DynamicResource ViewButtonWidth}"
                      FontSize="{DynamicResource ContentFontSize}" />
            <Button Grid.Row="0"
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Command="{Binding CancelCommand}"
                    Content="{DynamicResource Cancel}"
                    Width="{DynamicResource ViewButtonWidth}"
                    FontSize="{DynamicResource ContentFontSize}" />
        </Grid>
    </Grid>
</core:UserControlBase>
