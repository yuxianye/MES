<core:UserControlBase x:Class="Solution.Desktop.RoleManager.View.RoleEditView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:Metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:core="clr-namespace:Solution.Desktop.Core;assembly=Solution.Desktop.Core"
                      xmlns:res="clr-namespace:Solution.Desktop.Resource;assembly=Solution.Desktop.Resource"
                      mc:Ignorable="d"
                      d:DesignHeight="450"
                      d:DesignWidth="600"
                      Width="{DynamicResource  PopupWinodwsWidth2}"
                      Height="{DynamicResource PopupWinodwsHeight}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid Width="300" HorizontalAlignment="Left"  Grid.Row="0" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="125" />
                <ColumnDefinition Width="130" />
                <ColumnDefinition Width="40"  />
                <!--<ColumnDefinition Width="100*" />
            <ColumnDefinition Width="130*" />
            <ColumnDefinition Width="75*" />-->
            </Grid.ColumnDefinitions>
            <TextBox Name="firstIC"
                 Grid.Row="0"
                 Grid.Column="1"
                 Grid.ColumnSpan="2"
                 MaxLength="50"
                 TextWrapping="Wrap"
                 VerticalAlignment="Center"
                 FontSize="{DynamicResource ContentFontSize}"
                 Metro:TextBoxHelper.SelectAllOnFocus="True"
                 Metro:TextBoxHelper.UseFloatingWatermark="True"
                 Metro:TextBoxHelper.Watermark="{DynamicResource RoleName}"
                 Metro:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(Metro:TextBoxHelper.HasText), Mode=OneWay}"
                 Text="{Binding RoleModel.Name, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" />

            <TextBlock 
                   Grid.Row="1"
                   Grid.Column="1"
                   TextWrapping="Wrap"
                   Text="{DynamicResource RoleIsAdmin}"
                   FontSize="{DynamicResource ContentFontSize}"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center" />
            <CheckBox Grid.Column="2"
                  HorizontalAlignment="Left" 
                  Grid.Row="1" 
                  VerticalAlignment="Center" 
                  IsChecked="{Binding Path=RoleModel.IsAdmin,Mode=TwoWay}"
                  />
            <TextBlock Grid.Column="1"
                   Grid.Row="2"
                   TextWrapping="Wrap"
                   Text="{DynamicResource RoleIsDefault}"
                   FontSize="{DynamicResource ContentFontSize}"
                    HorizontalAlignment="Left"
                   VerticalAlignment="Center" />
            <CheckBox Grid.Column="2"
                  Grid.Row="2" 
                  IsChecked="{Binding Path=RoleModel.IsDefault,Mode=TwoWay}"/>
            <TextBlock 
                   Grid.Column="1"
                   Grid.Row="3"
                   TextWrapping="Wrap"
                   Text="{DynamicResource RoleIsSystem}"
                   FontSize="{DynamicResource ContentFontSize}"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center" />
            <CheckBox Grid.Column="2"
                  Grid.Row="3" 
                  IsChecked="{Binding Path=RoleModel.IsSystem,Mode=TwoWay}"/>
            <TextBlock 
                   Grid.Column="1"
                   Grid.Row="4"
                   TextWrapping="Wrap"
                   Text="{DynamicResource IsLocked}"
                   FontSize="{DynamicResource ContentFontSize}"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center" />
            <CheckBox Grid.Column="2"
                  Grid.Row="4" 
                  IsChecked="{Binding Path=RoleModel.IsLocked,Mode=TwoWay}"/>

            <res:ImageButton   Grid.Row="6"
                               Grid.Column="1"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Right"
                               Command="{Binding ConfirmCommand}"
                               Content="{DynamicResource Confirm}"
                               Width="{DynamicResource ViewButtonWidth}"
                               FontSize="{DynamicResource ContentFontSize}"
                               IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Confirm_32x32.png" />
            <res:ImageButton  Grid.Row="6"
                              Grid.Column="2"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Right"
                              Command="{Binding CancelCommand}"
                              Content="{DynamicResource Cancel}"
                              Width="{DynamicResource ViewButtonWidth}"
                              FontSize="{DynamicResource ContentFontSize}"
                              IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Cancel_32x32.png" />
        </Grid>

        <Grid Width="500" HorizontalAlignment="Right"  Grid.Row="0" Grid.Column="1" 
              mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="{DynamicResource  ViewButtonAreaHeight}"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel VerticalAlignment="Center"
                    Orientation="Horizontal" Grid.Row="0">
                <TextBox x:Name="txtSearch"
                     Grid.Column="1"
                     Style="{DynamicResource SearchMetroTextBox}"
                     Margin="{DynamicResource ControlMargin6}"
                     Metro:TextBoxHelper.ButtonCommand="{Binding SearchCommand, Mode=OneWay}"
                     Metro:TextBoxHelper.ButtonCommandParameter="{Binding ElementName=txtSearch, Path=Text}"
                     Metro:TextBoxHelper.SelectAllOnFocus="True"
                     Metro:TextBoxHelper.Watermark="{DynamicResource ModuleInfoSearchTextBoxWatermark}"
                     Width="{DynamicResource SearchTextBoxWidth}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter"
                                Command="{Binding SearchCommand, Mode=OneWay}"
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=TextBox}, Path=Text, Mode=OneWay}" />
                    </TextBox.InputBindings>
                </TextBox>
            </StackPanel>

            <DataGrid 
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  SelectionMode="Single"
                  HeadersVisibility="All"
                  GridLinesVisibility="All"
                  RowHeaderWidth="20"
                  ItemsSource="{Binding Path=DataSource}"
                  SelectedItem="{Binding ModuleManagerModel}"
                  HorizontalContentAlignment="Center"
                  SelectionUnit="FullRow"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled="True"
                  Margin="0,0,0,50"
                  Grid.Row="1" CanUserSortColumns="False">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="选择" HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Border Width="{Binding MarginLeft}"/>
                                    <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTemplateColumn Header="编号">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Border Width="{Binding MarginLeft}"/>
                                    <ToggleButton x:Name="ExpanderButton" 
                                              IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Visibility="{Binding IsVisible}">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid x:Name="Root" Background="Transparent">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" To="#FF1BBBFA" Storyboard.TargetProperty="(Path.Stroke).Color" Storyboard.TargetName="UncheckedVisual"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To=".7" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="CheckStates">
                                                            <VisualState x:Name="Unchecked"/>
                                                            <VisualState x:Name="Checked">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="UncheckedVisual"/>
                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedVisual"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Grid HorizontalAlignment="Right" Margin="2 2 5 2">
                                                        <Path x:Name="UncheckedVisual" Data="M 0,0 L 0,9 L 5,4.5 Z" Fill="#FFFFFFFF" HorizontalAlignment="Right" Height="9" Stroke="#FF989898" StrokeThickness="1" StrokeLineJoin="Miter" VerticalAlignment="Center" Width="6"/>
                                                        <Path x:Name="CheckedVisual" Data="M 6,0 L 6,6 L 0,6 Z" Fill="#FF262626" HorizontalAlignment="Center" Height="6" Opacity="0" StrokeLineJoin="Miter" VerticalAlignment="Center" Width="6"/>
                                                    </Grid>
                                                </Grid>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBlock Text="{Binding Id}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>-->

                    <DataGridTextColumn Binding="{Binding Name}"
                                    Header="{DynamicResource ModuleName}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding OrderCode}"
                                    Header="{DynamicResource ModuleOrderCode}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding ParentId}"
                                    Header="{DynamicResource ModuleParentId}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                </DataGrid.Columns>

                <DataGrid.Style>
                    <Style BasedOn="{StaticResource MetroDataGrid}"
                       TargetType="{x:Type DataGrid}">
                        <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource GrayBrush10}" />
                        <Setter Property="BorderBrush"
                            Value="{StaticResource AccentColorBrush}" />
                        <Setter Property="BorderThickness"
                            Value="1" />
                    </Style>
                </DataGrid.Style>
            </DataGrid>
        </Grid>
    </Grid>


</core:UserControlBase>

