<core:UserControlBase x:Class="Solution.Desktop.Communication.View.ProductionProcessEquipmentBusinessNodeMapView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:core="clr-namespace:Solution.Desktop.Core;assembly=Solution.Desktop.Core"
                      xmlns:ch="clr-namespace:Solution.Desktop.View.ControlHelper;assembly=Solution.Desktop.View"
                      xmlns:res="clr-namespace:Solution.Desktop.Resource;assembly=Solution.Desktop.Resource"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      mc:Ignorable="d"
                      d:DesignHeight="450"
                      d:DesignWidth="600"
                      Width="{DynamicResource  PopupWinodwsWidth2}"
                      Height="{DynamicResource PopupWinodwsHeight}">
    <UserControl.Resources>
        <Thickness x:Key="ColumnMargin">10 5 10 5</Thickness>
        <Thickness x:Key="ControlMargin">0 5 0 0</Thickness>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Width="300"
              HorizontalAlignment="Left"
              ShowGridLines="False"
              Grid.Row="0"
              Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
            </Grid.ColumnDefinitions>
            <ComboBox  Grid.Row="0"
                       Grid.Column="1"
                       Grid.ColumnSpan="3"
                       HorizontalAlignment="Left"
                       Width="290"
                       ItemsSource="{Binding ProductionProcessInfoList}"
                       VerticalAlignment="Center"
                       SelectedValuePath="Id"
                       DisplayMemberPath="ProductionProcessName"
                        IsEditable="True"
                       Metro:TextBoxHelper.UseFloatingWatermark="True"
                       Metro:TextBoxHelper.Watermark="{DynamicResource ProductionProcessName}"
                        Metro:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(Metro:TextBoxHelper.HasText), Mode=OneWay}"
                       SelectedValue="{Binding EquipmentBusinessNodeMapModel.ProductionProcessInfo_Id, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding ProductionProcessChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <ComboBox  Grid.Row="1"
                       Grid.Column="1"
                       Grid.ColumnSpan="3"
                       HorizontalAlignment="Left"
                       Width="290"
                       ItemsSource="{Binding BusinessInfoList}"                      
                       VerticalAlignment="Center"
                       SelectedValuePath="Id"
                       DisplayMemberPath="BusinessName"
                       Metro:TextBoxHelper.UseFloatingWatermark="True"
                       Metro:TextBoxHelper.Watermark="{DynamicResource OpcUaBusinessName}"
                       SelectedValue="{Binding EquipmentBusinessNodeMapModel.BusinessNode_Id, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding BusinessSelectionChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <ComboBox  Grid.Row="2"
                       Grid.Column="1"
                       Grid.ColumnSpan="3"
                       HorizontalAlignment="Left"
                       Width="290"
                       ItemsSource="{Binding EquipmentInfoList}"
                       IsEditable="True"
                       VerticalAlignment="Center"
                       SelectedValuePath="Id"
                       DisplayMemberPath="EquipmentName"
                       Metro:TextBoxHelper.UseFloatingWatermark="True"
                       Metro:TextBoxHelper.Watermark="{DynamicResource EquipmentName}"
                        Metro:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(Metro:TextBoxHelper.HasText), Mode=OneWay}"
                       SelectedValue="{Binding EquipmentBusinessNodeMapModel.Equipment_Id, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding EquipmentSelectionChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <res:ImageButton   Grid.Row="5"
                               Grid.Column="1"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Command="{Binding ConfirmCommand}"
                               Content="{DynamicResource Confirm}"
                               Width="{DynamicResource ViewButtonWidth}"
                               FontSize="{DynamicResource ContentFontSize}"
                               IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Confirm_32x32.png" />
            <res:ImageButton   Grid.Row="5"
                               Grid.Column="2"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Command="{Binding SaveCommand}"
                               Content="{DynamicResource Save}"
                               Width="{DynamicResource ViewButtonWidth}"
                               FontSize="{DynamicResource ContentFontSize}"
                               IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Save_32x32.png" />
            <res:ImageButton  Grid.Row="5"
                              Grid.Column="3"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              Command="{Binding CancelCommand}"
                              Content="{DynamicResource Cancel}"
                              Width="{DynamicResource ViewButtonWidth}"
                              FontSize="{DynamicResource ContentFontSize}"
                              IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Cancel_32x32.png" />
        </Grid>
        <Grid Width="500"
              HorizontalAlignment="Right"
              Grid.Row="0"
              Grid.Column="1"
              mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="{DynamicResource  ViewButtonAreaHeight}" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel VerticalAlignment="Center"
                        Orientation="Horizontal"
                        Grid.Row="0">
                <TextBox x:Name="txtSearch"
                         Grid.Column="1"
                         Style="{DynamicResource SearchMetroTextBox}"
                         Margin="{DynamicResource ControlMargin6}"
                         Metro:TextBoxHelper.ButtonCommand="{Binding SearchCommand, Mode=OneWay}"
                         Metro:TextBoxHelper.ButtonCommandParameter="{Binding ElementName=txtSearch, Path=Text}"
                         Metro:TextBoxHelper.SelectAllOnFocus="True"
                         Metro:TextBoxHelper.Watermark="{DynamicResource DeviceNodeSearchTextBoxWatermark}"
                         Width="{DynamicResource SearchTextBoxWidth}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter"
                                    Command="{Binding SearchCommand, Mode=OneWay}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=TextBox}, Path=Text, Mode=OneWay}" />
                    </TextBox.InputBindings>
                </TextBox>
            </StackPanel>
            <DataGrid AutoGenerateColumns="False"
                      IsReadOnly="True"
                      SelectionMode="Single"
                      HeadersVisibility="All"
                      GridLinesVisibility="All"
                      RowHeaderWidth="20"
                      ItemsSource="{Binding Path=NodeInfoList}"
                      SelectedItem="{Binding NodeInfo}"
                      HorizontalContentAlignment="Center"
                      SelectionUnit="FullRow"
                      VirtualizingStackPanel.IsVirtualizing="True"
                      mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled="True"
                      Margin="0,0,0,50"
                      Grid.Row="1">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="{DynamicResource Selected}"
                                            HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Visibility="Hidden"
                                        Header="Id"
                                        ScrollViewer.CanContentScroll="True"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding NodeName}"
                                        Header="{DynamicResource OpcUaNodeName}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding NodeUrl}"
                                        Header="{DynamicResource DeviceNodeUrl}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                    <DataGridTextColumn Binding="{Binding DeviceServerInfoName}"
                                        Header="{DynamicResource OpcUaNodeServerName}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />
                </DataGrid.Columns>
                <DataGrid.Style>
                    <Style BasedOn="{StaticResource MetroDataGrid}"
                           TargetType="{x:Type DataGrid}">
                        <Setter Property="AlternatingRowBackground"
                                Value="{DynamicResource GrayBrush10}" />
                        <Setter Property="BorderBrush"
                                Value="{StaticResource AccentColorBrush}" />
                        <Setter Property="BorderThickness"
                                Value="1" />
                    </Style>
                </DataGrid.Style>
            </DataGrid>
        </Grid>
    </Grid>
</core:UserControlBase>
