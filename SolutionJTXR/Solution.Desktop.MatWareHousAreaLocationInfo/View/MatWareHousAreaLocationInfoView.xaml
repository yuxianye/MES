<core:UserControlBase x:Class="Solution.Desktop.MatWareHousAreaLocationInfo.View.MatWareHousAreaLocationInfoView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:Metro="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:core="clr-namespace:Solution.Desktop.Core;assembly=Solution.Desktop.Core"
                      xmlns:dp="clr-namespace:Solution.Desktop.View.UserControls;assembly=Solution.Desktop.View"
                      xmlns:ch="clr-namespace:Solution.Desktop.View.ControlHelper;assembly=Solution.Desktop.View"
                      xmlns:res="clr-namespace:Solution.Desktop.Resource;assembly=Solution.Desktop.Resource"
                      xmlns:cv="clr-namespace:Solution.Desktop.View.Converter;assembly=Solution.Desktop.View"
                      mc:Ignorable="d"
                      Margin="0,-10,0,-7">
    <UserControl.Resources>
        <cv:EnumConverter x:Key="enumConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="{StaticResource ViewButtonAreaHeight2}" />
            <RowDefinition Height="6*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="2*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <StackPanel VerticalAlignment="Center"
                    Orientation="Horizontal"> 

            <ComboBox x:Name="MatWareHouseId" 
                  DisplayMemberPath="WareHouseName"
                  SelectedValuePath="Id"
                  ItemsSource="{Binding MatWareHouseInfoList}"
                  SelectedValue="{Binding MatWareHouse_Id, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                  VerticalAlignment="Center"
                  Metro:TextBoxHelper.UseFloatingWatermark="True"
                  Metro:TextBoxHelper.Watermark="{DynamicResource WareHouseLocationWareHouse}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding matwarehouseSelectionChangedCommand}"  
                                               CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}, Path=SelectedValue, Mode=OneWay}"
                                               />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>

            <ComboBox Name="MatWareHouseArea_Id" 
                  DisplayMemberPath="WareHouseAreaName"
                  SelectedValuePath="Id"
                  ItemsSource="{Binding MatWareHouseAreaInfoList}"
                  SelectedValue="{Binding MatWareHouseArea_Id, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                  VerticalAlignment="Center"
                  Metro:TextBoxHelper.UseFloatingWatermark="True"
                  Metro:TextBoxHelper.Watermark="{DynamicResource WareHouseLocationWareHouseArea}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding matwarehouseareaSelectionChangedCommand}"  
                                               CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}, Path=SelectedValue, Mode=OneWay}"
                                               />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>

            <res:ImageButton Content="{DynamicResource Refresh}"
                             ToolTip="{DynamicResource Refresh}"
                             Width="{DynamicResource ViewButtonWidth}"
                             Click="ImageButton_Click"
                             Command="{Binding RefreshCommand}"
                             Margin="{DynamicResource ControlMargin6}"
                             IconPath="pack://application:,,,/Solution.Desktop.Resource;component/Images/Refresh_32x32.png" />

            <!--<Button Name="Test" 
                    Width="50"
                    Click="Test_Click"
                    Content="Test">
            </Button>-->

        </StackPanel>
        <DataGrid Name="DataGridDetail"
                  Grid.Row="1" 
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  SelectionMode="Single"
                  HeadersVisibility="All"
                  GridLinesVisibility="All"
                  RowHeaderWidth="20"
                  RowHeight="50"
                  ItemsSource="{Binding Path=MatWareHousAreaLocationDataTable.DefaultView}"
                  HorizontalContentAlignment="Center"
                  SelectionUnit="Cell"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VerticalScrollBarVisibility="Auto"
                  LoadingRow="DataGridDetail_LoadingRow"
                  Loaded="DataGridDetail_Loaded"                  
                  LayoutUpdated="DataGridDetail_LayoutUpdated"
                  MouseLeftButtonDown="DataGridDetail_MouseLeftButtonDown"
                  HorizontalScrollBarVisibility="Auto">
            <!--《增加右键快捷菜单和双击打开编辑页面命令》-->
            <DataGrid.ContextMenu>
                <ContextMenu ItemsSource="{Binding MenuItems}"></ContextMenu>
            </DataGrid.ContextMenu>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding Path=EditCommand}" />
                </i:EventTrigger>
                <!--<i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding Path=SearchItemCommand}" 
                                           CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}, Path=DataGridDetail.CurrentCell, Mode=OneWay}"/>
                </i:EventTrigger>-->
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding Path=SearchItemCommand}" 
                                           CommandParameter="{Binding ElementName=DataGridDetail}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="LoadingRow">
                    <i:InvokeCommandAction Command="{Binding Path=SearchItem2Command}" 
                                           CommandParameter="{Binding ElementName=DataGridDetail}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="LayoutUpdated">
                    <i:InvokeCommandAction Command="{Binding Path=SearchItem3Command}" 
                                           CommandParameter="{Binding ElementName=DataGridDetail}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <!--《增加右键快捷菜单和双击打开编辑页面命令》-->
            <DataGrid.Resources>
                <ch:BindingProxy x:Key="proxy"
                                 Data="{Binding}" />
            </DataGrid.Resources>
            <DataGrid.Columns>
                <!--<DataGridCheckBoxColumn Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected, Mode=OneWay}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Header="Row Selected" />-->
               
                <!--<DataGridTextColumn Binding="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Visibility="Collapsed"
                                    Header="Id"
                                    ScrollViewer.CanContentScroll="True"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />-->

                <DataGridTextColumn Binding="{Binding LayerNumber}"
                                    Header="{DynamicResource MatWareHousAreaLocationInfoLayerNumber}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    />

                <DataGridTextColumn Binding="{Binding ColumnNumber}"
                                    Header="{DynamicResource MatWareHousAreaLocationInfoColumnNumber}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    Width="{DynamicResource MatWareHousAreaLocationColumnWidth}"/>               

                <DataGridTextColumn Header=""
                                    Width="*"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    />

            </DataGrid.Columns>
            <DataGrid.Style>
                <Style BasedOn="{StaticResource MetroDataGrid}"
                       TargetType="{x:Type DataGrid}">
                    <Setter Property="BorderBrush"
                            Value="{StaticResource AccentColorBrush}" />
                    <Setter Property="BorderThickness"
                            Value="1" />
                </Style>
            </DataGrid.Style>
        </DataGrid>

        <DataGrid Name="DataGridDetail2"
                  Grid.Row="2" 
                  IsReadOnly="True"
                  IsEnabled="False"
                  AutoGenerateColumns="False"
                  HeadersVisibility="All"
                  GridLinesVisibility="All"
                  RowHeaderWidth="20"
                  RowHeight="50"
                  Loaded="DataGridDetail2_Loaded"
                  ItemsSource="{Binding Path=MatWareHousAreaLocationInfoList2}"
                  HorizontalContentAlignment="Center"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VerticalScrollBarVisibility="Auto"
                  HorizontalScrollBarVisibility="Auto">
            <DataGrid.Resources>
                <ch:BindingProxy x:Key="proxy"
                                 Data="{Binding}" />
            </DataGrid.Resources>
            <DataGrid.Columns>
                <!--<DataGridCheckBoxColumn Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected, Mode=OneWay}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Header="Row Selected" />-->

                <!--<DataGridTemplateColumn Header="{DynamicResource MatWareHousAreaLocationInfoMatWareHouseLocationType1}"
                                        HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Border Width="{Binding MarginLeft}"/>
                                <TextBlock Text="{ Binding MatWareHouseLocationType1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                           Background="{Binding SolidColorBrush1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                           Width="200"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->

                <DataGridTextColumn Binding="{Binding MatWareHouseLocationType1}"
                                    Header="{DynamicResource MatWareHousAreaLocationInfoMatWareHouseLocationType1}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    Width="200"/>

                <DataGridTextColumn Binding="{Binding MatWareHouseLocationType2}"
                                    Header="{DynamicResource MatWareHousAreaLocationInfoMatWareHouseLocationType2}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    Width="200"/>

                <DataGridTextColumn Binding="{Binding MatWareHouseLocationType4}"
                                    Header="{DynamicResource MatWareHousAreaLocationInfoMatWareHouseLocationType4}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    Width="200"/>

                <DataGridTextColumn Binding="{Binding MatWareHouseLocationType3}"
                                    Header="{DynamicResource MatWareHousAreaLocationInfoMatWareHouseLocationType3}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    Width="200"/>

                <DataGridTextColumn Binding="{Binding MatWareHouseLocationType5}"
                                    Header="{DynamicResource MatWareHousAreaLocationInfoMatWareHouseLocationType5}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    Width="200"/>

                <DataGridTextColumn Header=""
                                    Width="*"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" />

            </DataGrid.Columns>
            <DataGrid.Style>
                <Style BasedOn="{StaticResource MetroDataGrid}"
                       TargetType="{x:Type DataGrid}">
                    <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource GrayBrush10}" />
                    <Setter Property="BorderBrush"
                            Value="{StaticResource AccentColorBrush}" />
                    <Setter Property="BorderThickness"
                            Value="1" />
                </Style>
            </DataGrid.Style>
        </DataGrid>


        <DataGrid Name="DataGridDetail3"
                  Grid.Row="3" 
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  IsEnabled="False"
                  HeadersVisibility="All"
                  GridLinesVisibility="All"
                  RowHeaderWidth="20"
                  RowHeight="50"
                  ItemsSource="{Binding Path=MatWareHousAreaLocationItemInfoList}"
                  HorizontalContentAlignment="Center"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VerticalScrollBarVisibility="Auto"
                  HorizontalScrollBarVisibility="Auto">
            <DataGrid.Resources>
                <ch:BindingProxy x:Key="proxy"
                                 Data="{Binding}" />
            </DataGrid.Resources>
            <DataGrid.Columns>
                <!--<DataGridCheckBoxColumn Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected, Mode=OneWay}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Header="Row Selected" />-->

                <DataGridTextColumn Binding="{Binding WareHouseLocationCode}"
                                    Header="{DynamicResource MatWareHousAreaLocationInfoMatWareHouseLocationID}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    Width="240"/>

                <DataGridTextColumn Binding="{Binding PalletCode}"
                                    Header="{DynamicResource MatWareHousAreaLocationInfoPalletID}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    Width="200"/>

                <DataGridTextColumn Binding="{Binding BatchCode}"
                                    Header="{DynamicResource MaterialBatchBatchCode}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    Width="200"/>
                
                <DataGridTextColumn Binding="{Binding MaterialCode}"
                                    Header="{DynamicResource MatWareHousAreaLocationInfoMaterialID}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    Width="160"/>

                <DataGridTextColumn Binding="{Binding MaterialName}"
                                    Header="{DynamicResource MatWareHousAreaLocationInfoMaterialName}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    Width="160"/>

                <DataGridTextColumn Binding="{Binding Quantity}"
                                    Header="{DynamicResource MatWareHousAreaLocationInfoQuantity}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    Width="160"/>

                <DataGridTextColumn Binding="{Binding FullPalletQuantity}"
                                    Header="{DynamicResource FullPalletQuantity}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    Width="160"/>

                <DataGridTextColumn Binding="{Binding MaterialUnit,Converter={StaticResource enumConverter}}"
                                    Header="{DynamicResource MatWareHousAreaLocationInfoUnit}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    Width="160"/>

                <DataGridTextColumn Binding="{Binding InStorageBillCode}"
                                    Header="{DynamicResource MatWareHousAreaLocationInfoBillCode}"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    Width="200"/>

                <DataGridTextColumn Header=""
                                    Width="*"
                                    HeaderStyle="{DynamicResource DataGridColumnHeaderStyle}" 
                                    />

            </DataGrid.Columns>
            <DataGrid.Style>
                <Style BasedOn="{StaticResource MetroDataGrid}"
                       TargetType="{x:Type DataGrid}">
                    <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource GrayBrush10}" />
                    <Setter Property="BorderBrush"
                            Value="{StaticResource AccentColorBrush}" />
                    <Setter Property="BorderThickness"
                            Value="1" />
                </Style>
            </DataGrid.Style>
        </DataGrid>

    </Grid>
</core:UserControlBase>